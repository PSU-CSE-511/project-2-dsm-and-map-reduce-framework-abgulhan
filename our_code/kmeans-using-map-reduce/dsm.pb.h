// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dsm.proto

#ifndef PROTOBUF_INCLUDED_dsm_2eproto
#define PROTOBUF_INCLUDED_dsm_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_dsm_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_dsm_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_dsm_2eproto();
namespace dsm {
class dsm_reply;
class dsm_replyDefaultTypeInternal;
extern dsm_replyDefaultTypeInternal _dsm_reply_default_instance_;
class dsm_request;
class dsm_requestDefaultTypeInternal;
extern dsm_requestDefaultTypeInternal _dsm_request_default_instance_;
}  // namespace dsm
namespace google {
namespace protobuf {
template<> ::dsm::dsm_reply* Arena::CreateMaybeMessage<::dsm::dsm_reply>(Arena*);
template<> ::dsm::dsm_request* Arena::CreateMaybeMessage<::dsm::dsm_request>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace dsm {

// ===================================================================

class dsm_request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dsm.dsm_request) */ {
 public:
  dsm_request();
  virtual ~dsm_request();

  dsm_request(const dsm_request& from);

  inline dsm_request& operator=(const dsm_request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  dsm_request(dsm_request&& from) noexcept
    : dsm_request() {
    *this = ::std::move(from);
  }

  inline dsm_request& operator=(dsm_request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const dsm_request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const dsm_request* internal_default_instance() {
    return reinterpret_cast<const dsm_request*>(
               &_dsm_request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(dsm_request* other);
  friend void swap(dsm_request& a, dsm_request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline dsm_request* New() const final {
    return CreateMaybeMessage<dsm_request>(nullptr);
  }

  dsm_request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<dsm_request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const dsm_request& from);
  void MergeFrom(const dsm_request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(dsm_request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes data = 4;
  void clear_data();
  static const int kDataFieldNumber = 4;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // string name = 5;
  void clear_name();
  static const int kNameFieldNumber = 5;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // int64 vaddr = 2;
  void clear_vaddr();
  static const int kVaddrFieldNumber = 2;
  ::google::protobuf::int64 vaddr() const;
  void set_vaddr(::google::protobuf::int64 value);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // int32 id = 3;
  void clear_id();
  static const int kIdFieldNumber = 3;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:dsm.dsm_request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int64 vaddr_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dsm_2eproto;
};
// -------------------------------------------------------------------

class dsm_reply final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dsm.dsm_reply) */ {
 public:
  dsm_reply();
  virtual ~dsm_reply();

  dsm_reply(const dsm_reply& from);

  inline dsm_reply& operator=(const dsm_reply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  dsm_reply(dsm_reply&& from) noexcept
    : dsm_reply() {
    *this = ::std::move(from);
  }

  inline dsm_reply& operator=(dsm_reply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const dsm_reply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const dsm_reply* internal_default_instance() {
    return reinterpret_cast<const dsm_reply*>(
               &_dsm_reply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(dsm_reply* other);
  friend void swap(dsm_reply& a, dsm_reply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline dsm_reply* New() const final {
    return CreateMaybeMessage<dsm_reply>(nullptr);
  }

  dsm_reply* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<dsm_reply>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const dsm_reply& from);
  void MergeFrom(const dsm_reply& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(dsm_reply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes data = 3;
  void clear_data();
  static const int kDataFieldNumber = 3;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // int32 ack = 1;
  void clear_ack();
  static const int kAckFieldNumber = 1;
  ::google::protobuf::int32 ack() const;
  void set_ack(::google::protobuf::int32 value);

  // int32 permission = 2;
  void clear_permission();
  static const int kPermissionFieldNumber = 2;
  ::google::protobuf::int32 permission() const;
  void set_permission(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:dsm.dsm_reply)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::int32 ack_;
  ::google::protobuf::int32 permission_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dsm_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// dsm_request

// int32 type = 1;
inline void dsm_request::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 dsm_request::type() const {
  // @@protoc_insertion_point(field_get:dsm.dsm_request.type)
  return type_;
}
inline void dsm_request::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:dsm.dsm_request.type)
}

// int64 vaddr = 2;
inline void dsm_request::clear_vaddr() {
  vaddr_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 dsm_request::vaddr() const {
  // @@protoc_insertion_point(field_get:dsm.dsm_request.vaddr)
  return vaddr_;
}
inline void dsm_request::set_vaddr(::google::protobuf::int64 value) {
  
  vaddr_ = value;
  // @@protoc_insertion_point(field_set:dsm.dsm_request.vaddr)
}

// int32 id = 3;
inline void dsm_request::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 dsm_request::id() const {
  // @@protoc_insertion_point(field_get:dsm.dsm_request.id)
  return id_;
}
inline void dsm_request::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:dsm.dsm_request.id)
}

// bytes data = 4;
inline void dsm_request::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& dsm_request::data() const {
  // @@protoc_insertion_point(field_get:dsm.dsm_request.data)
  return data_.GetNoArena();
}
inline void dsm_request::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dsm.dsm_request.data)
}
#if LANG_CXX11
inline void dsm_request::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dsm.dsm_request.data)
}
#endif
inline void dsm_request::set_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dsm.dsm_request.data)
}
inline void dsm_request::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dsm.dsm_request.data)
}
inline ::std::string* dsm_request::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:dsm.dsm_request.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* dsm_request::release_data() {
  // @@protoc_insertion_point(field_release:dsm.dsm_request.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void dsm_request::set_allocated_data(::std::string* data) {
  if (data != nullptr) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:dsm.dsm_request.data)
}

// string name = 5;
inline void dsm_request::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& dsm_request::name() const {
  // @@protoc_insertion_point(field_get:dsm.dsm_request.name)
  return name_.GetNoArena();
}
inline void dsm_request::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dsm.dsm_request.name)
}
#if LANG_CXX11
inline void dsm_request::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dsm.dsm_request.name)
}
#endif
inline void dsm_request::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dsm.dsm_request.name)
}
inline void dsm_request::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dsm.dsm_request.name)
}
inline ::std::string* dsm_request::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:dsm.dsm_request.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* dsm_request::release_name() {
  // @@protoc_insertion_point(field_release:dsm.dsm_request.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void dsm_request::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:dsm.dsm_request.name)
}

// -------------------------------------------------------------------

// dsm_reply

// int32 ack = 1;
inline void dsm_reply::clear_ack() {
  ack_ = 0;
}
inline ::google::protobuf::int32 dsm_reply::ack() const {
  // @@protoc_insertion_point(field_get:dsm.dsm_reply.ack)
  return ack_;
}
inline void dsm_reply::set_ack(::google::protobuf::int32 value) {
  
  ack_ = value;
  // @@protoc_insertion_point(field_set:dsm.dsm_reply.ack)
}

// int32 permission = 2;
inline void dsm_reply::clear_permission() {
  permission_ = 0;
}
inline ::google::protobuf::int32 dsm_reply::permission() const {
  // @@protoc_insertion_point(field_get:dsm.dsm_reply.permission)
  return permission_;
}
inline void dsm_reply::set_permission(::google::protobuf::int32 value) {
  
  permission_ = value;
  // @@protoc_insertion_point(field_set:dsm.dsm_reply.permission)
}

// bytes data = 3;
inline void dsm_reply::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& dsm_reply::data() const {
  // @@protoc_insertion_point(field_get:dsm.dsm_reply.data)
  return data_.GetNoArena();
}
inline void dsm_reply::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dsm.dsm_reply.data)
}
#if LANG_CXX11
inline void dsm_reply::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dsm.dsm_reply.data)
}
#endif
inline void dsm_reply::set_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dsm.dsm_reply.data)
}
inline void dsm_reply::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dsm.dsm_reply.data)
}
inline ::std::string* dsm_reply::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:dsm.dsm_reply.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* dsm_reply::release_data() {
  // @@protoc_insertion_point(field_release:dsm.dsm_reply.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void dsm_reply::set_allocated_data(::std::string* data) {
  if (data != nullptr) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:dsm.dsm_reply.data)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace dsm

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_dsm_2eproto
